parameters:
    role_student: ROLE_UTC_CAS
    role_admin: ROLE_ADMIN
    role_allowed_to_switch: ROLE_ALLOWED_TO_SWITCH
    role_super_admin: ROLE_SUPER_ADMIN

security:
    encoders:
        USEC\StudentBundle\Entity\Student: plaintext
    
    role_hierarchy:
        %role_admin%:       %role_student%
        %role_super_admin%: [%role_student%, %role_admin%, %role_allowed_to_switch%]

    providers:
        administrators:
            id: sso_user_provider

    firewalls:
        # Firewall using the UTC CAS.
        secured_area:
            pattern: ^/
            anonymous: ~
            trusted_sso:
                manager: utc_sso
                # We don't need login nor logout action, as we uniquely use the CAS.
                login_action: false
                logout_action: false
                # If the user login by the CAS doesn't already exist in our database, create an entry.
                create_users: true
                created_users_roles: [ %role_student% ]
                check_path: /login_check

        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        login:
            pattern:  ^/login$
            security: false
        
    access_control:
        - { path: ^/(login_check|login)$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # The routes to protect by CAS.
        - { path: ^/etudes, roles: %role_student% }
        - { path: ^/profil, roles: %role_student% }
        - { path: ^/admin, roles: %role_admin% }
